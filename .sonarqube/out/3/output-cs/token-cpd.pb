£
fD:\dev\FullCycle\FC.Codeflix.Catalog\src\FC.Codeflix.Catalog.Infra.Data.EF\CodeflixCatalogDbContext.cs
	namespace

 	
FC


 
.

 
Codeflix

 
.

 
Catalog

 
.

 
Infra

 #
.

# $
Data

$ (
.

( )
EF

) +
{ 
public 

class $
CodeflixCatalogDbContext )
: 	
	DbContext
 
{ 
public 
DbSet 
< 
Category 
> 

Categories )
=>* ,
Set- 0
<0 1
Category1 9
>9 :
(: ;
); <
;< =
public $
CodeflixCatalogDbContext '
(' (
DbContextOptions( 8
<8 9$
CodeflixCatalogDbContext9 Q
>Q R
optionsS Z
)Z [
: 
base 
( 
options 
) 
{ 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
builder= D
)D E
{ 	
builder 
. 
ApplyConfiguration &
(& '
new' *!
CategoryConfiguration+ @
(@ A
)A B
)B C
;C D
} 	
} 
} ¾
rD:\dev\FullCycle\FC.Codeflix.Catalog\src\FC.Codeflix.Catalog.Infra.Data.EF\Configurations\CategoryConfiguration.cs
	namespace

 	
FC


 
.

 
Codeflix

 
.

 
Catalog

 
.

 
Infra

 #
.

# $
Data

$ (
.

( )
EF

) +
.

+ ,
Configurations

, :
{ 
internal 
class !
CategoryConfiguration (
: 	$
IEntityTypeConfiguration
 "
<" #
Category# +
>+ ,
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Category0 8
>8 9
builder: A
)A B
{ 	
builder 
. 
HasKey 
( 
category #
=>$ &
category' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
category %
=>& (
category) 1
.1 2
Name2 6
)6 7
. 
HasMaxLength 
( 
$num !
)! "
;" #
builder 
. 
Property 
( 
category %
=>& (
category) 1
.1 2
Description2 =
)= >
. 
HasMaxLength 
( 
$num #
)# $
;$ %
} 	
} 
} È.
mD:\dev\FullCycle\FC.Codeflix.Catalog\src\FC.Codeflix.Catalog.Infra.Data.EF\Repositories\CategoryRepository.cs
	namespace 	
FC
 
. 
Codeflix 
. 
Catalog 
. 
Infra #
.# $
Data$ (
.( )
EF) +
.+ ,
Repositories, 8
{ 
public 

class 
CategoryRepository #
:$ %
ICategoryRepository& 9
{ 
private 
readonly $
CodeflixCatalogDbContext 1
_context2 :
;: ;
private 
DbSet 
< 
Category 
> 
_categories  +
=>, .
_context/ 7
.7 8
Set8 ;
<; <
Category< D
>D E
(E F
)F G
;G H
public 
CategoryRepository !
(! "$
CodeflixCatalogDbContext" :
context; B
)B C
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
Insert  
(  !
Category! )
	aggregate* 3
,3 4
CancellationToken5 F
cancellationTokenG X
)X Y
{ 	
await 
_categories 
. 
AddAsync &
(& '
	aggregate' 0
,0 1
cancellationToken2 C
)C D
;D E
} 	
public 
async 
Task 
< 
Category "
>" #
Get$ '
(' (
Guid( ,
id- /
,/ 0
CancellationToken1 B
cancellationTokenC T
)T U
{ 	
var 
category 
= 
await  
_categories! ,
. 
AsNoTracking 
( 
) 
.   
FirstOrDefaultAsync   $
(  $ %
x  % &
=>  ' )
x  * +
.  + ,
Id  , .
==  / 1
id  2 4
,  4 5
cancellationToken  6 G
)  G H
;  H I
NotFoundException"" 
."" 
ThrowIfNull"" )
("") *
category""* 2
,""2 3
$"""4 6
$str""6 @
{""@ A
id""A C
}""C D
$str""D P
"""P Q
)""Q R
;""R S
return$$ 
category$$ 
!$$ 
;$$ 
}%% 	
public&& 
Task&& 
Update&& 
(&& 
Category&& #
	aggregate&&$ -
,&&- .
CancellationToken&&/ @
_&&A B
)&&B C
{'' 	
return(( 
Task(( 
.(( 

FromResult(( "
(((" #
_categories((# .
.((. /
Update((/ 5
(((5 6
	aggregate((6 ?
)((? @
)((@ A
;((A B
})) 	
public,, 
Task,, 
Delete,, 
(,, 
Category,, #
	aggregate,,$ -
,,,- .
CancellationToken,,/ @
_,,A B
),,B C
{-- 	
return.. 
Task.. 
... 

FromResult.. "
(.." #
_categories..# .
.... /
Remove../ 5
(..5 6
	aggregate..6 ?
)..? @
)..@ A
;..A B
}// 	
public00 
async00 
Task00 
<00 
SearchOutput00 &
<00& '
Category00' /
>00/ 0
>000 1
Search002 8
(008 9
SearchInput009 D
input00E J
,00J K
CancellationToken00L ]
cancellationToken00^ o
)00o p
{11 	
var22 
toSkip22 
=22 
(22 
input22 
.22  
Page22  $
-22% &
$num22' (
)22( )
*22* +
input22, 1
.221 2
PerPage222 9
;229 :
var33 
query33 
=33 
_categories33 #
.33# $
AsNoTracking33$ 0
(330 1
)331 2
;332 3
query44 
=44 
query44 
.44 
OrderBy44 !
(44! "
x44" #
=>44$ &
x44' (
.44( )
Id44) +
)44+ ,
;44, -
if55 
(55 
!55 
String55 
.55 
IsNullOrWhiteSpace55 *
(55* +
input55+ 0
.550 1
Search551 7
)557 8
)558 9
query66 
=66 
query66 
.66 
Where66 #
(66# $
x66$ %
=>66& (
x66) *
.66* +
Name66+ /
.66/ 0
Contains660 8
(668 9
input669 >
.66> ?
Search66? E
)66E F
)66F G
;66G H
var88 
total88 
=88 
await88 
query88 #
.88# $

CountAsync88$ .
(88. /
)88/ 0
;880 1
var99 
items99 
=99 
await99 
query99 #
.:: 
Skip:: 
(:: 
toSkip:: 
):: 
.;; 
Take;; 
(;; 
input;; 
.;; 
PerPage;; #
);;# $
.<< 
ToListAsync<< 
(<< 
)<< 
;<< 
return== 
new== 
(== 
input== 
.== 
Page== !
,==! "
input==# (
.==( )
PerPage==) 0
,==0 1
total==2 7
,==7 8
items==9 >
)==> ?
;==? @
}>> 	
}@@ 
}AA 